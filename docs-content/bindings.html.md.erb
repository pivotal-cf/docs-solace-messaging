---
title: Binding to Solace PubSub+ Service Instances
owner: Partners
---

This topic describes how developers can bind an app to instances of the Solace PubSub+ service.


## <a id='about-bindings'></a> About Bindings

For an app deployed in VMware Tanzu to obtain credentials for a Solace PubSub+ service instance, a developer needs to bind the app to the service instance.

Binding the app to a service instance produces [Solace PubSub+ Credentials](credentials.html), which become available in the `VCAP_SERVICES` environment variable for the app as deployed in VMware Tanzu.

Unbinding the app from the service instance revokes the credentials.

The following procedures assume you have created a Solace PubSub+ service called `solace-pubsub-instance` as discussed in [Service Instances](service-instances.html) and that you have a deployed app called `web-backend`.

The procedures show you how to bind this service instance to the app named `web-backend`.


## <a id='service-specific-configuration'></a> Binding with Service Specific Parameters

A binding may be customized at creation time with service-specific parameters.

1. `username`: When this key is provided, the binding will its value as the client-username in the Message VPN backing the service instance. This will allow a new application to bind to an existing service and access the resources that are already owned by the given `username` in the service instance.


## <a id='bind-cf-cli'></a> Bind a Service Instance with the cf CLI

To bind an instance of the Solace PubSub+ service with the cf Command Line Interface (CLI) tool, do the following:

1. Set your API endpoint to the Cloud Controller of your deployment.
  <pre class="terminal">
  $ cf api api.YOUR-SYSTEM-DOMAIN
  Setting api endpoint to api.YOUR-SYSTEM-DOMAIN...
  OK
  API endpoint:  <span>https:</span>//api.YOUR-SYSTEM-DOMAIN (API version: 2.59.0)
  Not logged in. Use 'cf login' to log in.
  </pre>

1. Log in to your deployment and select an org and a space.
  <pre class="terminal">
  $ cf login
  API endpoint: <span>https:</span>//api.YOUR-SYSTEM-DOMAIN
  Email> user<span>@</span>example.com
  Password>
  </pre>

1. Locate the previously created service.
	<pre class="terminal">
	$ cf services
	Getting services in org example / space dev as user<span>@</span>example.com...
	OK

	name                        service            plan                 bound apps   last operation
	solace-pubsub-instance      solace-pubsub      enterprise-large-ha               create succeeded
	</pre>

1. Bind the instance to an app called `web-backend`.
  <pre class="terminal">
  $ cf bind-service web-backend solace-pubsub-instance
  Binding service solace-pubsub-instance to app web-backend in org example / space development as user<span>@</span>example.com...
  OK
  TIP: Use 'cf restage web-backend to ensure your env variable changes take effect
  </pre>

1. Restage the app for the binding to take effect.
  <pre class="terminal">
  $ cf restage web-backend
  </pre>


## <a id='bind-cf-cli-specific-params'></a> Bind a Service Instance with the cf CLI with Service-Specific Parameters

To bind an instance of the Solace PubSub+ service with the cf Command Line Interface (CLI) tool with an added service-specific parameter to choose a `username`, do the following:

1. Set your API endpoint to the Cloud Controller of your deployment.
  <pre class="terminal">
  $ cf api api.YOUR-SYSTEM-DOMAIN
  Setting api endpoint to api.YOUR-SYSTEM-DOMAIN...
  OK
  API endpoint:  <span>https:</span>//api.YOUR-SYSTEM-DOMAIN (API version: 2.59.0)
  Not logged in. Use 'cf login' to log in.
  </pre>

1. Log in to your deployment and select an org and a space.
  <pre class="terminal">
  $ cf login
  API endpoint: <span>https:</span>//api.YOUR-SYSTEM-DOMAIN
  Email> user<span>@</span>example.com
  Password>
  </pre>

1. Locate the previously created service.
	<pre class="terminal">
	$ cf services
	Getting services in org example / space dev as user<span>@</span>example.com...
	OK

	name                        service            plan                 bound apps   last operation
	solace-pubsub-instance      solace-pubsub      enterprise-large-ha               create succeeded
	</pre>

1. Bind the instance to an app called `web-backend` with a service-specific parameter `username` parameter.
  <pre class="terminal">
  $ cf bind-service web-backend solace-pubsub-instance -c '{ "username" : "customName" }'
  Binding service solace-pubsub-instance to app web-backend in org example / space development as user<span>@</span>example.com...
  OK
  TIP: Use 'cf restage web-backend to ensure your env variable changes take effect
  </pre>

1. Restage the app for the binding to take effect.
  <pre class="terminal">
  $ cf restage web-backend
  </pre>


## <a id='apps-man'></a> Bind a Service Instance in Apps Manager

To bind an instance of the Solace PubSub+ service in Apps Manager, do the following:

1. Navigate to `apps.YOUR-SYSTEM-DOMAIN` in a browser and log in.

1. Select the org and space in which you wish to create the Solace PubSub+ service.

1. Click **Apps**, click the app name **web-backend**, click **Services**, then click **Bind a Service**.

  ![alt-text=""](./images/appsmanager_solace_messaging_service_list_empty_new.png)

1. Select a service instance to bind to the app and click **Bind**.

  ![alt-text=""](./images/appsmanager_solace_messaging_bind_service_selected_new.png)

1. After the service is bound, you can find it listed under **Services**.

  ![alt-text=""](./images/appsmanager_solace_messaging_service_list_has_service_new.png)


## <a id='unbind-cf-cli'></a> Unbind a Service Instance with the cf CLI

Unbinding an app from a service instance revokes previously allocated credentials.
Then the app no longer has access to this service.
When the binding-linked credentials are being removed, an orphaned resource policy
is checked and applied. For more information about orphaned resource policies, see
[Default Orphaned Resource Policy](installing.html#default_orphaned_resource_policy)
  and
[Service Orphaned Resource Policy](service-instances.html#service_orphaned_resource_policy).

To unbind an instance of the Solace PubSub+ service with the cf Command Line Interface (CLI) tool,
do the following:

1. Set your API endpoint to the Cloud Controller of your deployment.
  <pre class="terminal">
  $ cf api api.YOUR-SYSTEM-DOMAIN
  Setting api endpoint to api.YOUR-SYSTEM-DOMAIN...
  OK
  API endpoint:  <span>https:</span>//api.YOUR-SYSTEM-DOMAIN (API version: 2.59.0)
  Not logged in. Use 'cf login' to log in.
  </pre>

1. Log in to your deployment and select an org and a space.
  <pre class="terminal">
  $ cf login
  API endpoint: <span>https:</span>//api.YOUR-SYSTEM-DOMAIN
  Email> user<span>@</span>example.com
  Password>
  </pre>

1. Locate the previously created service.
	<pre class="terminal">
	$ cf services
	Getting services in org example / space dev as user<span>@</span>example.com...
	OK

	name                        service            plan                 bound apps   last operation
	solace-pubsub-instance      solace-pubsub      enterprise-large-ha  web-backend  create succeeded
	</pre>

1. Unbind the instance from the app called `web-backend`.
  <pre class="terminal">
  $ cf unbind-service web-backend solace-pubsub-instance
  Unbinding service solace-pubsub-instance from app web-backend in org example / space development as user<span>@</span>example.com...
  OK
  TIP: Use 'cf restage web-backend to ensure your env variable changes take effect
  </pre>

1. Restage the app for the binding to take effect.
  <pre class="terminal">
  $ cf restage web-backend
  </pre>
